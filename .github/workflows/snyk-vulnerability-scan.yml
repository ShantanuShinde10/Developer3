name: Snyk Security Scan and Issue Creation

on:
  push:
    branches:
      - main

permissions:
  issues: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: "--json-file-output=snyk_results.json"

      - name: Create issues for Snyk vulnerabilities
        if: success() || failure()
        run: |
          if [ -f snyk_results.json ]; then
            vulns=$(jq -r '.vulnerabilities[] | "\(.id) \(.title) \(.severity) \(.packageName) \(.version)"' snyk_results.json)
            if [ -n "$vulns" ]; then
              echo "$vulns" | while read -r id title severity package version; do
                issue_title="[$severity] $title in $package@$version"
                issue_body="**Vulnerability ID:** $id\n**Severity:** $severity\n**Package:** $package\n**Version:** $version\n\nPlease address this vulnerability promptly."
                existing_issues=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" "https://api.github.com/repos/${{ github.repository }}/issues?state=open&labels=snyk" | jq -r '.[].title')
                if echo "$existing_issues" | grep -q "$issue_title"; then
                  echo "Issue '$issue_title' already exists. Skipping creation."
                else
                  curl -s -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
                    -d "{\"title\":\"$issue_title\", \"body\":\"$issue_body\", \"labels\":[\"snyk\"]}" \
                    "https://api.github.com/repos/${{ github.repository }}/issues"
                  echo "Created issue: $issue_title"
                fi
              done
            else
              echo "No vulnerabilities found by Snyk."
            fi
          else
            echo "Snyk results file not found. Ensure Snyk ran correctly."
          fi
