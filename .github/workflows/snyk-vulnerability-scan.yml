name: Snyk Security Scan and Issue Creation

on:
  push:
    branches:
      - main

permissions:
  actions: write
  issues: write
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}  # Use GH_PAT for authentication

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload SARIF to GitHub Security Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
          token: ${{ secrets.GH_PAT }}
          wait-for-processing: true

      - name: Create issues for code scanning alerts
        if: success()
        run: |
          ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts?state=open")
          ALERT_COUNT=$(echo "$ALERTS" | jq 'length')
          if [ "$ALERT_COUNT" -gt 0 ]; then
            echo "Code scanning alerts found. Creating issues..."
            echo "$ALERTS" | jq -c '.[]' | while read -r alert; do
              RULE_NAME=$(echo "$alert" | jq -r '.rule.name')
              ALERT_URL=$(echo "$alert" | jq -r '.html_url')
              ISSUE_TITLE="Fix code scanning alert - $RULE_NAME"
              ISSUE_BODY="Tracking issue for:\n- [ ] $ALERT_URL"
              curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
                -d "{\"title\":\"$ISSUE_TITLE\", \"body\":\"$ISSUE_BODY\", \"labels\":[\"security\"]}" \
                https://api.github.com/repos/${{ github.repository }}/issues
            done
          else
            echo "No code scanning alerts found."
          fi
